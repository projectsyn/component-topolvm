apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "topolvm.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "topolvm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  {{- with .Values.controller.minReadySeconds }}
  minReadySeconds: {{ . }}
  {{- end }}
  {{- with .Values.controller.updateStrategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: topolvm-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: topolvm-controller
    spec:
      {{- with .Values.controller.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.controller.securityContext.enabled }}
      securityContext: {{ toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "topolvm.fullname" . }}-controller
      containers:
        - name: topolvm-controller
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          command:
            - /topolvm-controller
            - --cert-dir=/certs
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 60
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with .Values.controller.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm
            - name: certs
              mountPath: /certs

        - name: csi-provisioner
          {{- if .Values.image.csi.csiProvisioner }}
          image: {{ .Values.image.csi.csiProvisioner }}
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          {{- end }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          command:
            - /csi-provisioner
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - "--feature-gates=Topology=true"
            - --leader-election
            - --leader-election-namespace={{ .Release.Namespace }}
            {{- with .Values.controller.storageCapacityTracking.enabled }}
            - --enable-capacity
            - --capacity-ownerref-level=2
            {{- end }}
          {{- with .Values.controller.storageCapacityTracking.enabled }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: csi-resizer
          {{- if .Values.image.csi.csiResizer }}
          image: {{ .Values.image.csi.csiResizer }}
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          {{- end }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          command:
            - /csi-resizer
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - --leader-election
            - --leader-election-namespace={{ .Release.Namespace }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: liveness-probe
          {{- if .Values.image.csi.livenessProbe }}
          image: {{ .Values.image.csi.livenessProbe }}
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          {{- end }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          command:
            - /livenessprobe
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

      volumes:
        - name: certs
          secret:
            secretName: {{ template "topolvm.fullname" . }}-mutatingwebhook
        {{- with .Values.controller.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{- with .Values.controller.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
